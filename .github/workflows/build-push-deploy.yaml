# Based on https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
name: 'Build, push, deploy'

on:
  push:
    branches: [ '*' ]

env:
  REGISTRY: 'ghcr.io'
  IMAGE_NAME: '${{ github.repository }}'

jobs:
  build-push-image:
    runs-on: 'ubuntu-22.04'

    permissions:
      contents: 'read'
      packages: 'write'
      attestations: 'write'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - name: 'Log in to the Container registry'
        uses: 'docker/login-action@v3'
        with:
          registry: '${{ env.REGISTRY }}'
          username: '${{ github.actor }}'
          password: '${{ secrets.GITHUB_TOKEN }}'

      - name: 'Extract metadata (tags, labels) for Docker'
        id: 'meta'
        uses: 'docker/metadata-action@v5'
        with:
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}'
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=long,prefix=

      - name: 'Set up QEMU'
        uses: 'docker/setup-qemu-action@v3'

      - name: 'Set up Docker Buildx'
        uses: 'docker/setup-buildx-action@v3'

      - name: 'Expose GitHub Runtime'
        uses: 'crazy-max/ghaction-github-runtime@v3'

      - name: 'Build and push Docker images'
        id: 'push'
        uses: 'docker/build-push-action@v5'
        with:
          context: '.'
          platforms: 'linux/amd64,linux/arm64'
          push: true
          tags: '${{ steps.meta.outputs.tags }}'
          labels: '${{ steps.meta.outputs.labels }}'
          cache-from: 'type=gha'
          cache-to: 'type=gha,mode=max'

      - name: 'Generate artifact attestation'
        uses: 'actions/attest-build-provenance@v1'
        with:
          subject-name: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}'
          subject-digest: '${{ steps.push.outputs.digest }}'
          push-to-registry: true

  deploy:
    runs-on: 'ubuntu-22.04'
    needs: [ 'build-push-image' ]
    if: github.ref == 'refs/heads/stage'

    permissions: { }

    steps:
    - name: 'Install kustomize'
      run: |
        set -euo pipefail
        curl -s "${INST_KUSTOMIZE_URL}" | bash -x
        chmod +x kustomize
      env:
        INST_KUSTOMIZE_URL: 'https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh'

    - name: 'Checkout minikube-config'
      uses: 'actions/checkout@v4'
      with:
        repository: 'ayqazi/minikube-config'
        token: '${{ secrets.WRITE_TO_MINIKUB_CONFIG_TOKEN }}'
        path: 'minikube-config'
        persist-credentials: true
        ref: master

    - name: 'Update donotdrivenow image tag'
      run: |
        ls -l
        ls -l minikube-config
        cd minikube-config/donotdrivenow
        ls -l
        git config user.name 'donotdrivenow-deploy-bot'
        git config user.email 'donotdrivenow-deploy-bot@donotreply.example'
        kustomize edit set image kustomize-managed-image-name='${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
        git add kustomization.yaml
        git commit -m 'Deploy donotdrivenow@${{ github.sha }}' 
        git push
